pwd
help()
read.csv
x<-4
x
class(x)
x<-c(4,true)
x<-c(4,T)
class(x)
x<-list(4,"a","b", T)
x[[1]]
x<-1:4
y<-2
x+y
read.csv
csv.data <- read.csv("hw1_data.csv")
cd
ls
a<-available.packages()
head(rownames(a),4)
install.packages("KernSmooth")
library(KernSmooth)
cls
clr
clear
cat("\014")
clc
clc
swirl()
library(swirl)
swirl()
x<-c(44,NA, 5, NA)
X*3
x*3
y<-rnorm(1000)
y
z<-rep(na, 1000)
z<-rep(NA, 1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0\0
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)&x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
vect
identical(vect, vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector<-c(1:20)
my_vector<-1:20
my_vect
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
my_matrix2<-matrix(1:20,nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
patients<-c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
cnames<-c("patient", "age", "weight","bp","rating", "test")
?colnames
colnames(my_data)<-cnames
my_data
TRUE == TRUE
(FALSE == TRUE)== FALSE
6 == 7
6<7
10<=10
5 !=7
!(5==7)
!(5==7)
!5==7
FALSE&FALSE
TRUE&c(TRUE,FALSE,FALSE)
TRUE&&c(TRUE,FALSE,FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins','twins')
xor(5==6, !FALSE)
ints<-sample(10)
ints
ints > 5
which(ints>7)
any(ints<0)
all(ints>0)
head(flags)
dim(flags)
viewinfo(flags)
viewinfo()
ls()
dir
dir()
class(flags)
cls_list<-lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect<-sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors<-flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors, mean)
flag_shapes<-flags[,19:23]
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat<-sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals<-lapply(flags, unique)
unique_vals
length(unique_vals$botright)
lapply(unique_vals, length)
sapply(unique_vals, length)
lapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
summary(flags)
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
library(swirl)
swirl
swirl()
ls()
class(plants)
dim(plants)
nrows(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head()
head(plants)
head(plants,10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample()
?sample
sample(1:6,4,replace=TRUE)
sample(1:6,4,replace=TRUE)
sample(1:20,10,replace=FALSE)
sample(1:20,10)
LETTERS
SAMPLE(LETTERS)
sample(LETTERS)
flips<-sample(c(0,1),100,replace=TRUE, prob=c(0.3,0.7))
flips
flips<-sample(c(1,0),100,replace=TRUE, prob=c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1,size=100,prob=0.7)
flips2<-rbinom(1,size=100,prob=0.7)
flips2<-rbinom(100,size=1,prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,mean=100,sd=25)
?rpois()
rpois(5,10)
my_pois<-replicate(100,rpois(5,10))
my_pois
cm<-colMeans(my_pois)
hist(cm)
pwd
ls
dir
dir()
cd ..
wd
wd()
dir()
dir()
library(swirl)
swirl()
install_from_swirl("Getting and Cleaning Data")
install_from_swirl("Data Analysis")
install_from_swirl("Mathematical Biostatistics Boot Camp")
install_from_swirl("Open Intro")
install_from_swirl("Regression Models")
install_from_swirl("Statistical Inference")
swirl()
library(xlsx)
library(swirl)
swirl()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res<-gather(students2, sex_class, count)
res<-gather(students2, sex_class, count, -grade)
res
?separate()
?separate
separate(res, sex_class, c("sex","class") )
submit()
students
students3
submit()
?spread
submit()
submit()
reset()
submit
submit()
submit()
extract_numeric("class5")
submit()
students4
submit()
submit()
submit()
passed
failed
mutate(passed, status="passed")
passed<-mutate(passed, status="passed")
failed<-mutate(failed, status="failed")
?rbind_list
rbind_list(passed, failed)
sat
?select
?separate
submit()
submit()
sys.getlocale("LC_TIME")
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
today()
this_day<-today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label=T)
wday(this_day, label=TRUE)
this_moment<-now()
this_moment
hour(this_moment)
my_date<-ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy(March 12, 1975)
mdy("March 12, 1975")
dmy(25081985)
ymd('192012')
ymd('1920-1-2')
dt1
ymd_hms(dt1)
hms( "03:22:14")
dt2
ymd(dt2)
update(this_moment, hours=8, minutes = 34, seconds = 55)
this_moment
this<-update(this_moment, hours=00, minutes = 46, seconds = 55)
this<-update(this_moment, hours=10, minutes = 46, seconds = 55)
this<-update(this_moment, hours=10, minutes = 16, seconds = 55)
0
this<-update(this_moment, hours=10, minutes = 16, seconds = 0)
this<-update(this_moment, hours= 10, minutes = 16, seconds = 0)
this<-update(this_moment, hours=0, minutes = 48, seconds = 0)
this_moment<-update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment
this_moment<-update(this_moment, hours=0, minutes = 50, seconds = 0)
info()
nxt()
this_moment<-update(this_moment, hours=24, minutes=51,seconds=0)
this_moment
?now
nyc<-now("America/New_York")
nyc
depart<-nyc+days(2)
depart
depart<-update(depart, hours=17, minutes=34, seconds=0)
depart<-update(depart, hours=17, minutes=34)
depart
arrive<-depart + hours(15)+minutes(50)
?with_tz
with_tz(arrive, "Asia/Hong_Kong")
arrive<-with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time<-mdy("June 17, 2008", tz="Singapore")
last_time
?new_interval
how_long<-new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
12h+ffh
0x12+0xff
0x12+0xff+0x1
q()
source('C:/Users/Sam/SkyDrive/Documents/Coursera/3. Getting and Cleaning Data/project/run_analysis.R', echo=TRUE)
